/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/dataviewextension.ts":
/*!**********************************!*\
  !*** ./src/dataviewextension.ts ***!
  \**********************************/
/***/ (() => {

eval("\r\nvar Utils;\r\n(function (Utils) {\r\n    function ReadBytesRange(data, offset, length) {\r\n        var bytes = new Uint8Array(length);\r\n        for (var i = 0; i < bytes.length; i++) {\r\n            var b = data.getUint8(offset + i);\r\n            bytes[i] = b;\r\n        }\r\n        return bytes;\r\n    }\r\n    Utils.ReadBytesRange = ReadBytesRange;\r\n    function StringFromUint8Array(buffer) {\r\n        var result = '';\r\n        for (var i = 0; i < buffer.length; i++) {\r\n            result += String.fromCharCode(buffer[i]);\r\n        }\r\n        return result;\r\n    }\r\n    Utils.StringFromUint8Array = StringFromUint8Array;\r\n    function Assert(exp) {\r\n        throw new Error(\"Expression failed : \" + exp.toString());\r\n    }\r\n    Utils.Assert = Assert;\r\n})(Utils || (Utils = {}));\r\nvar shift = Math.pow(2, 32);\r\nDataView.prototype.getUint64 = function (byteOffset, littleEndian) {\r\n    var left = this.getUint32(byteOffset, littleEndian);\r\n    var right = this.getUint32(byteOffset + 4, littleEndian);\r\n    var combined = littleEndian ? left + shift * right : shift * left + right;\r\n    return combined;\r\n};\r\nDataView.prototype.getUint8Array = function (byteOffset, length) {\r\n    return Utils.ReadBytesRange(this, byteOffset, length);\r\n};\r\nDataView.prototype.getString = function (byteOffset, length) {\r\n    return Utils.StringFromUint8Array(Utils.ReadBytesRange(this, byteOffset, length));\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXZpZXdleHRlbnNpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZGF0YXZpZXdleHRlbnNpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQVUsS0FBSyxDQXFCZDtBQXJCRCxXQUFVLEtBQUs7SUFDWCxTQUFnQixjQUFjLENBQUMsSUFBYSxFQUFDLE1BQWEsRUFBQyxNQUFhO1FBQ3BFLElBQUksS0FBSyxHQUFHLElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ25DLEtBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxLQUFLLENBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFDO1lBQzNCLElBQU0sQ0FBQyxHQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDaEI7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBUGUsb0JBQWMsaUJBTzdCLENBQUE7SUFFRCxTQUFnQixvQkFBb0IsQ0FBQyxNQUFpQjtRQUNsRCxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDaEIsS0FBSSxJQUFJLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUM7WUFDNUIsTUFBTSxJQUFJLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7U0FDM0M7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBTmUsMEJBQW9CLHVCQU1uQyxDQUFBO0lBRUQsU0FBZ0IsTUFBTSxDQUFDLEdBQWU7UUFDbEMsTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBdUIsR0FBRyxDQUFDLFFBQVEsRUFBSSxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUZlLFlBQU0sU0FFckIsQ0FBQTtBQUNMLENBQUMsRUFyQlMsS0FBSyxLQUFMLEtBQUssUUFxQmQ7QUFTRCxJQUFNLEtBQUssR0FBRyxTQUFBLENBQUMsRUFBRSxFQUFFLENBQUEsQ0FBQztBQUVwQixRQUFRLENBQUMsU0FBUyxDQUFDLFNBQVMsR0FBRyxVQUFVLFVBQWlCLEVBQUMsWUFBcUI7SUFFOUUsSUFBTSxJQUFJLEdBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDdkQsSUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEdBQUcsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBRzNELElBQU0sUUFBUSxHQUFHLFlBQVksQ0FBQSxDQUFDLENBQUMsSUFBSSxHQUFHLEtBQUssR0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRSxJQUFJLEdBQUcsS0FBSyxDQUFDO0lBS3hFLE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUMsQ0FBQTtBQUVELFFBQVEsQ0FBQyxTQUFTLENBQUMsYUFBYSxHQUFHLFVBQVUsVUFBaUIsRUFBQyxNQUFhO0lBQ3hFLE9BQU8sS0FBSyxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUMsVUFBVSxFQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3hELENBQUMsQ0FBQTtBQUVELFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxHQUFHLFVBQVUsVUFBaUIsRUFBQyxNQUFhO0lBQ3BFLE9BQU8sS0FBSyxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFDLFVBQVUsRUFBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ3BGLENBQUMsQ0FBQSJ9\n\n//# sourceURL=webpack://usdz/./src/dataviewextension.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dataviewextension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataviewextension */ \"./src/dataviewextension.ts\");\n/* harmony import */ var _dataviewextension__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_dataviewextension__WEBPACK_IMPORTED_MODULE_0__);\n\r\nvar zipFileDataUrl = 'data:@file/zip;base64,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';\r\nconsole.log('LOLLLLLLLLLLLL!');\r\nwindow.addEventListener(\"load\", function (ev) {\r\n    console.log('loaded!');\r\n    var fileElement = document.getElementById('usdz_file');\r\n    fileElement.addEventListener(\"change\", function (ev) {\r\n        console.log('select changed!');\r\n        if (fileElement.files != null) {\r\n            if (fileElement.files.length > 0) {\r\n                ParseUSDZ(fileElement.files[0]);\r\n            }\r\n        }\r\n    });\r\n});\r\nvar Zip;\r\n(function (Zip) {\r\n    var SigCDH = 0x02014b50;\r\n    var SigEOCD = 0x06054b50;\r\n    var SigLFH = 0x04034b50;\r\n    var FileHeader = (function () {\r\n        function FileHeader() {\r\n            this.filename = '';\r\n            this.compressedSize = 0;\r\n            this.uncompressedSize = 0;\r\n            this.modificationTime = 0;\r\n            this.modificationDate = 0;\r\n            this.uncompressedCrc32 = 0;\r\n            this.compressionMethod = 0;\r\n            this.dataOffset = 0;\r\n        }\r\n        return FileHeader;\r\n    }());\r\n    var LocalFileHeaderDescription = {\r\n        signature: 4,\r\n        version: 2,\r\n        generalPurposeBitFlag: 2,\r\n        compressionMethod: 2,\r\n        lastModificationTime: 2,\r\n        lastModificationDate: 2,\r\n        crc32: 4,\r\n        compressedSize: 4,\r\n        uncompressedSize: 4,\r\n        filenameLength: 2,\r\n        extraFieldLength: 2\r\n    };\r\n    var LocalFileHeaderRecord = (function () {\r\n        function LocalFileHeaderRecord() {\r\n            this.signature = 0;\r\n            this.version = 0;\r\n            this.generalPurposeBitFlag = 0;\r\n            this.compressionMethod = 0;\r\n            this.lastModificationTime = 0;\r\n            this.lastModificationDate = 0;\r\n            this.crc32 = 0;\r\n            this.compressedSize = 0;\r\n            this.uncompressedSize = 0;\r\n            this.filenameLength = 0;\r\n            this.extraFieldLength = 0;\r\n        }\r\n        return LocalFileHeaderRecord;\r\n    }());\r\n    function ReadRecord(data, record, recordDescription, signature, offset) {\r\n        record['signature'] = data.getUint32(offset, true);\r\n        offset += 4;\r\n        if (record['signature'] !== signature)\r\n            throw 'Invalid zip record format';\r\n        for (var field in recordDescription) {\r\n            if (field === 'signature')\r\n                continue;\r\n            var fieldBytesSize = recordDescription[field];\r\n            switch (fieldBytesSize) {\r\n                case 2:\r\n                    {\r\n                        var value = data.getUint16(offset, true);\r\n                        record[field] = value;\r\n                    }\r\n                    break;\r\n                case 4:\r\n                    {\r\n                        var value = data.getUint32(offset, true);\r\n                        record[field] = value;\r\n                    }\r\n                    break;\r\n            }\r\n            offset += fieldBytesSize;\r\n        }\r\n        return record;\r\n    }\r\n    function getRecordSize(recordDescription) {\r\n        var size = 0;\r\n        for (var field in recordDescription) {\r\n            size += recordDescription[field];\r\n        }\r\n        return size;\r\n    }\r\n    function ReadLFHRecord(data, offset) {\r\n        var record = new LocalFileHeaderRecord();\r\n        return ReadRecord(data, record, LocalFileHeaderDescription, SigLFH, offset);\r\n    }\r\n    function ReadFileHeader(data, offset) {\r\n        var recordSize = getRecordSize(LocalFileHeaderDescription);\r\n        var record = ReadLFHRecord(data, offset);\r\n        var filenameBytes = Utils.ReadBytesRange(data, offset + recordSize, record.filenameLength);\r\n        var filename = Utils.StringFromUint8Array(filenameBytes);\r\n        var extraFieldOffset = offset + recordSize + record.filenameLength;\r\n        var extraFieldBytes = Utils.ReadBytesRange(data, extraFieldOffset, record.extraFieldLength);\r\n        var fileHeader = new FileHeader();\r\n        fileHeader.compressedSize = record.compressedSize;\r\n        fileHeader.uncompressedSize = record.uncompressedSize;\r\n        fileHeader.compressionMethod = record.compressionMethod;\r\n        fileHeader.filename = filename;\r\n        fileHeader.modificationDate = record.lastModificationDate;\r\n        fileHeader.modificationTime = record.lastModificationTime;\r\n        fileHeader.uncompressedCrc32 = record.crc32;\r\n        fileHeader.dataOffset = extraFieldOffset + record.extraFieldLength;\r\n        return fileHeader;\r\n    }\r\n    function ReadSignature(data, offset) {\r\n        return data.getUint32(offset, true);\r\n    }\r\n    function GetFileExtension(filename) {\r\n        var i = filename.lastIndexOf('.');\r\n        if (i == -1)\r\n            return '';\r\n        else\r\n            return filename.substring(i);\r\n    }\r\n    Zip.GetFileExtension = GetFileExtension;\r\n    function QueryFiles(data) {\r\n        var files = [];\r\n        var offset = 0;\r\n        while (true) {\r\n            var sig = ReadSignature(data, offset);\r\n            if (sig === SigLFH) {\r\n                var file = ReadFileHeader(data, offset);\r\n                offset = file.dataOffset + file.compressedSize;\r\n                files.push(file);\r\n            }\r\n            else if (sig === SigEOCD) {\r\n                console.warn('Current we don\\'t support End Of Central Directory record!');\r\n                break;\r\n            }\r\n            else if (sig === SigCDH) {\r\n                console.warn('Current we don\\'t support Central Directory Header record!');\r\n                break;\r\n            }\r\n            else {\r\n                console.warn('Unsupported record!');\r\n                break;\r\n            }\r\n        }\r\n        return files;\r\n    }\r\n    Zip.QueryFiles = QueryFiles;\r\n})(Zip || (Zip = {}));\r\nfunction SendToDownload(filename, data) {\r\n    var b = new Blob([data]);\r\n    var link = document.createElement('a');\r\n    link.href = URL.createObjectURL(b);\r\n    link.setAttribute('download', filename);\r\n    console.log(link.href);\r\n    link.click();\r\n}\r\nvar USDC;\r\n(function (USDC) {\r\n    var Decode = (function () {\r\n        function Decode() {\r\n        }\r\n        Decode.GetMaxInputSize = function () {\r\n            return 127 * Decode.LZ4_MAX_INPUT_SIZE;\r\n        };\r\n        Decode.LZ4_compressBound = function (size) {\r\n            return size > Decode.LZ4_MAX_INPUT_SIZE ? 0 : size + (size / 255) + 16;\r\n        };\r\n        Decode.GetCompressedBufferSize = function (inputSize) {\r\n            if (inputSize > Decode.GetMaxInputSize()) {\r\n                return 0;\r\n            }\r\n            if (inputSize <= Decode.LZ4_MAX_INPUT_SIZE) {\r\n                return Decode.LZ4_compressBound(inputSize) + 1;\r\n            }\r\n            var nWholeChunks = inputSize / Decode.LZ4_MAX_INPUT_SIZE;\r\n            var partChunkSz = inputSize % Decode.LZ4_MAX_INPUT_SIZE;\r\n            var sz = 1 + nWholeChunks * (Decode.LZ4_compressBound(Decode.LZ4_MAX_INPUT_SIZE) +\r\n                Decode.sizeOfInteger);\r\n            if (partChunkSz > 0) {\r\n                var sizeOfInteger = 4;\r\n                sz += Decode.LZ4_compressBound(partChunkSz) + Decode.sizeOfInteger;\r\n            }\r\n            return sz;\r\n        };\r\n        Decode.GetEncodedBufferSize = function (count) {\r\n            return count > 0 ? (Decode.sizeOfInteger) + ((count * 2 + 7) / 8) + (count * Decode.sizeOfInteger) : 0;\r\n        };\r\n        Decode.CopyByteRange = function (source, sourceOffset, dest, destOffset, length) {\r\n            for (var i = 0; i < length; i++) {\r\n                source[sourceOffset + i] = dest[destOffset + i];\r\n            }\r\n        };\r\n        Decode.DecodeIntegers = function (buffer, count) {\r\n            var bufferDataView = new DataView(buffer);\r\n            var common = bufferDataView.getInt32(0);\r\n            var numcodesBytes = (count * 2 + 7) / 8;\r\n            var codesIn = new Uint8Array(numcodesBytes);\r\n            Decode.CopyByteRange(buffer, 4, codesIn, 0, codesIn.length);\r\n            var vintsIn = new Uint8Array(buffer.length - numcodesBytes - 4);\r\n            var vintsInDataView = new DataView(vintsIn);\r\n            Decode.CopyByteRange(buffer, 4 + codesIn.length, vintsIn, 0, vintsIn.length);\r\n            var vintsOffset = 0;\r\n            var codeInOffset = 0;\r\n            var results = [];\r\n            var preVal = 0;\r\n            var intsLeft = count;\r\n            while (intsLeft > 0) {\r\n                var toProcess = Math.min(intsLeft, 4);\r\n                var codeByte = codesIn[codeInOffset];\r\n                for (var i = 0; i < count; i++) {\r\n                    var x = (codeByte & (3 << (2 * i))) >> (2 * i);\r\n                    if (x == 0)\r\n                        preVal += common;\r\n                    else if (x == 1) {\r\n                        preVal += vintsInDataView.getInt8(vintsOffset);\r\n                        vintsOffset += 1;\r\n                    }\r\n                    else if (x == 2) {\r\n                        preVal += vintsInDataView.getInt16(vintsOffset);\r\n                        vintsOffset += 2;\r\n                    }\r\n                    else if (x == 4) {\r\n                        preVal += vintsInDataView.getInt32(vintsOffset);\r\n                        vintsOffset += 4;\r\n                    }\r\n                    results.push(preVal);\r\n                }\r\n                codeInOffset++;\r\n                intsLeft -= toProcess;\r\n            }\r\n            return results;\r\n        };\r\n        Decode.LZ4_MAX_INPUT_SIZE = 0x7E000000;\r\n        Decode.sizeOfInteger = 4;\r\n        return Decode;\r\n    }());\r\n    var Section = (function () {\r\n        function Section() {\r\n            this.token = '';\r\n            this.offset = 0;\r\n            this.size = 0;\r\n        }\r\n        return Section;\r\n    }());\r\n    USDC.Section = Section;\r\n    function ReadToc(data, offset) {\r\n        var sections = [];\r\n        var sectionsCount = data.getUint64(offset, true);\r\n        offset += 8;\r\n        for (var i = 0; i < sectionsCount; i++) {\r\n            var section = new Section();\r\n            section.token = data.getString(offset, 16);\r\n            offset += 16;\r\n            section.offset = data.getUint64(offset, true);\r\n            offset += 8;\r\n            section.size = data.getUint64(offset, true);\r\n            offset += 8;\r\n            sections.push(section);\r\n            console.info('section', section);\r\n        }\r\n        return sections;\r\n    }\r\n    USDC.ReadToc = ReadToc;\r\n    function ReadTokens(data, offset, size) {\r\n        var tokenCount = data.getUint64(offset, true);\r\n        offset += 8;\r\n        var uncompressedSize = data.getUint64(offset, true);\r\n        offset += 8;\r\n        var compressedSize = data.getUint64(offset, true);\r\n        offset += 8;\r\n        var compressedBytes = data.getUint8Array(offset, compressedSize);\r\n        offset += compressedSize;\r\n    }\r\n    USDC.ReadTokens = ReadTokens;\r\n    function ReadStrings(data, offset, size) {\r\n        var indexCount = data.getUint64(offset, true);\r\n        offset += 8;\r\n        Utils.Assert(function () { return indexCount * 4 + 8 === size; });\r\n        var indices = [];\r\n        for (var i = 0; i < indexCount; i++) {\r\n            var index = data.getInt32(offset);\r\n            offset += 4;\r\n            indices.push(index);\r\n        }\r\n        return indices;\r\n    }\r\n    USDC.ReadStrings = ReadStrings;\r\n    function ReadFields(data, offset, size) {\r\n        var fieldsCount = data.getUint64(offset, true);\r\n        offset += 8;\r\n        var fieldSize = data.getUint64(offset, true);\r\n        offset += 8;\r\n        var compressedBytes = data.getUint8Array(offset, fieldSize);\r\n        offset += fieldSize;\r\n        var workspaceSize = Decode.GetCompressedBufferSize(Decode.GetEncodedBufferSize(fieldsCount));\r\n        console.info('workspace size:', workspaceSize);\r\n    }\r\n    USDC.ReadFields = ReadFields;\r\n    function ReadFieldSets(data, offset, size) {\r\n        var fieldSetCount = data.getUint64(offset, true);\r\n        offset += 8;\r\n        var fieldSetSize = data.getUint64(offset, true);\r\n        offset += 8;\r\n    }\r\n    USDC.ReadFieldSets = ReadFieldSets;\r\n    function ReadPaths(data, offset, size) {\r\n        var pathCount = data.getUint64(offset, true);\r\n    }\r\n    USDC.ReadPaths = ReadPaths;\r\n    function ReadSpecs(data, offset, size) {\r\n    }\r\n    USDC.ReadSpecs = ReadSpecs;\r\n})(USDC || (USDC = {}));\r\nfunction ParseUSDZ(zipFile) {\r\n    zipFile.arrayBuffer().then(function (buffer) {\r\n        var data = new DataView(buffer);\r\n        var filesList = Zip.QueryFiles(data);\r\n        var _loop_1 = function (i) {\r\n            var file = filesList[i];\r\n            var fileData = Utils.ReadBytesRange(data, filesList[i].dataOffset, filesList[i].uncompressedSize);\r\n            var ext = Zip.GetFileExtension(file.filename);\r\n            console.log(ext);\r\n            if (ext === '.usdc') {\r\n                var usdcData = new DataView(fileData.buffer, 0, fileData.length);\r\n                var offset = 0;\r\n                var magicStringBytes_1 = usdcData.getString(offset, 7);\r\n                offset += 8;\r\n                Utils.Assert(function () { return magicStringBytes_1 === 'PXR-USDC'; });\r\n                var versionBytes = Utils.ReadBytesRange(usdcData, offset, 15);\r\n                offset += 8;\r\n                var tocOffset = usdcData.getUint64(offset, true);\r\n                offset += 8;\r\n                var sections = USDC.ReadToc(usdcData, tocOffset);\r\n                for (var i_1 = 0; i_1 < sections.length; i_1++) {\r\n                    var section = sections[i_1];\r\n                    if (section.token === 'TOKENS') {\r\n                        USDC.ReadTokens(usdcData, section.offset, section.size);\r\n                    }\r\n                    else if (section.token === 'STRINGS') {\r\n                        USDC.ReadStrings(usdcData, section.offset, section.size);\r\n                    }\r\n                    else if (section.token === 'FIELDS') {\r\n                        USDC.ReadFields(usdcData, section.offset, section.size);\r\n                    }\r\n                    else if (section.token === 'FIELDSETS') {\r\n                        USDC.ReadFieldSets(usdcData, section.offset, section.size);\r\n                    }\r\n                    else if (section.token === 'PATHS') {\r\n                        USDC.ReadPaths(usdcData, section.offset, section.size);\r\n                    }\r\n                    else if (section.token === 'SPECS') {\r\n                        USDC.ReadSpecs(usdcData, section.offset, section.size);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        for (var i = 0; i < filesList.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n    });\r\n}\r\nwindow.alert('LOL!');\r\n//# sourceMappingURL=data:application/json;base64,\n\n//# sourceURL=webpack://usdz/./src/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;